type Anlage
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"], operations: [read] }
      { allow: private, provider: iam }
      {
        allow: owner
        ownerField: "users"
        identityClaim: "email"
        operations: [read]
      }
    ]
  )
  @key(fields: ["id"]) {
  id: ID!
  firma: String!
  standort: String!
  anschrift: String
  users: [String]
  anlagenUsers: [AnlagenUser] @connection(keyName: "byAnlage", fields: ["id"])
  referenzStueli: [ReferenzStueli]
    @connection(keyName: "byAnlage", fields: ["id"])
  projekte: [Projekt] @connection(keyName: "byAnlage", fields: ["id"])
}

type AnlagenUser
  @model
  @key(fields: ["userEmail", "anlageId"])
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"], operations: [read] }
      { allow: private, provider: iam, operations: [create, delete, read] }
      {
        allow: owner
        ownerField: "userEmail"
        identityClaim: "email"
        operations: [read]
      }
    ]
  )
  @key(name: "byUser", fields: ["userEmail", "anlageId"])
  @key(name: "byAnlage", fields: ["anlageId", "userEmail"]) {
  anlageId: ID!
  userEmail: String!
  anlage: Anlage! @connection(fields: ["anlageId"])
  user: User! @connection(fields: ["userEmail"])
}

type Projekt
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"], operations: [read] }
      { allow: private, provider: iam }
      {
        allow: owner
        ownerField: "users"
        identityClaim: "email"
        operations: [read]
      }
    ]
  )
  @key(name: "byAnlage", fields: ["anlageId"])
  @key(fields: ["id"]) {
  id: ID!
  anlageId: ID!
  projektNummer: Int!
  users: [String]
  anlage: Anlage! @connection(fields: ["anlageId"])
  projektStueli: [ProjektStueli]
    @connection(keyName: "byProjekt", fields: ["id"])
}

type ProjektStueli
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, provider: iam }
    ]
  )
  @key(fields: ["id"])
  @key(name: "byProjekt", fields: ["projektId"])
  @key(
    name: "byKurzspezifikation"
    fields: ["projektId", "kurzspezifikation"]
    queryField: "projektStueliByKurzspezifikation"
  ) {
  id: ID!
  projektId: ID!
  kurzspezifikation: String
  lieferant: String
  nennweite: String
  feinspezifikation: String
  voschlagKurzspezifikation: String
  vorschlagLieferant: String
  vorschlagNennweite: String
  vorschlagFeinspezifikation: String
}

type ReferenzStueli
  @model
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, provider: iam }
      { allow: owner, ownerField: "anlageId", identityClaim: "currentAnlageId" }
    ]
  )
  @key(fields: ["id"])
  @key(
    name: "byKurzspezifikation"
    fields: ["anlageId", "kurzspezifikation"]
    queryField: "referenzStueliByKurzspezifikation"
  )
  @key(name: "byAnlage", fields: ["anlageId"], queryField: "byAnlage") {
  id: ID!
  anlageId: ID!
  kurzspezifikation: String
  lieferant: String
  nennweite: String
  feinspezifikation: String
}

type User
  @model
  @key(fields: ["email"])
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, provider: iam }
      { allow: owner, ownerField: "email", identityClaim: "email" }
    ]
  ) {
  email: String!
  role: Role!
  # determines which ReferenzStueli items the user can query or mutate
  currentAnlageId: String
  currentProjektId: String
  anlagen: [AnlagenUser] @connection(keyName: "byUser", fields: ["email"])
}

enum Role {
  Anlagenbauer
  Anlagenbetreiber
  Admin
}

type Mutation {
  createAnlagenUserPrimary(input: CreateAnlagenUserPrimaryInput!): AnlagenUser
    @function(name: "createAnlagenUser")
    @aws_cognito_user_pools
    @aws_iam

  deleteAnlagenUserPrimary(input: DeleteAnlagenUserPrimaryInput!): AnlagenUser
    @function(name: "deleteAnlagenUser")
    @aws_cognito_user_pools
    @aws_iam

  deleteAnlagePrimary(input: DeleteAnlagePrimaryInput!): Anlage
    @function(name: "deleteAnlage")
    @aws_cognito_user_pools
    @aws_iam

  setCurrentAnlageId(input: SetCurrentAnlageIdInput!): User
    @function(name: "setCurrentAnlageId")
    @aws_cognito_user_pools

  setCurrentProjektId(input: SetCurrentProjektIdInput!): User
    @function(name: "setCurrentProjektId")
    @aws_cognito_user_pools
}

input DeleteAnlagePrimaryInput {
  anlageId: ID!
}

input CreateAnlagenUserPrimaryInput {
  anlageId: ID!
  userEmail: String!
}

input DeleteAnlagenUserPrimaryInput {
  anlageId: ID!
  userEmail: String!
}

input SetCurrentAnlageIdInput {
  anlageId: ID!
}

input SetCurrentProjektIdInput {
  projektId: ID!
}
